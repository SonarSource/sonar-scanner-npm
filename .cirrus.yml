env:
  CIRRUS_VAULT_URL: https://vault.sonar.build:8200
  CIRRUS_VAULT_AUTH_PATH: jwt-cirrusci
  CIRRUS_VAULT_ROLE: cirrusci-${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}

  # ARTIFACTORY_URL: https://repox.jfrog.io/artifactory
  # ARTIFACTORY_PRIVATE_USERNAME: vault-${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-private-reader
  #  ARTIFACTORY_PRIVATE_PASSWORD: VAULT[development/artifactory/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-private-reader access_token]
  ARTIFACTORY_DEPLOY_ACCESS_TOKEN: VAULT[development/artifactory/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-qa-deployer access_token]
  ARTIFACTORY_DEPLOY_REPOSITORY: sonarsource-npm-public-qa
  ARTIFACTORY_ACCESS_TOKEN: VAULT[development/artifactory/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-private-reader access_token]

  SONAR_TOKEN: VAULT[development/kv/data/sonarcloud data.token]

  BUILD_NAME: 'sonar-scanner-npm'
  # Use bash (instead of sh on linux or cmd.exe on windows)
  CIRRUS_SHELL: bash

only_sonarsource_qa: &ONLY_SONARSOURCE_QA
  only_if: $CIRRUS_USER_COLLABORATOR == 'true' && $CIRRUS_TAG == "" && ($CIRRUS_PR != "" || $CIRRUS_BRANCH == "master" || $CIRRUS_BRANCH =~ "branch-.*" || $CIRRUS_BRANCH =~ "dogfood-on-.*")

container_definition: &CONTAINER_DEFINITION
  dockerfile: .cirrus/Dockerfile
  docker_arguments:
    CIRRUS_AWS_ACCOUNT: ${CIRRUS_AWS_ACCOUNT}
  cluster_name: ${CIRRUS_CLUSTER_NAME}
  builder_role: cirrus-builder
  builder_image: docker-builder-v*
  builder_instance_type: t2.small
  region: eu-central-1
  namespace: default

ec2_instance_definition: &INSTANCE_DEFINITION
  ec2_instance:
    region: eu-central-1
    type: t3.medium
    image: base-windows-jdk17-v*
    platform: windows

qa_script_definition: &QA_SCRIPT_DEFINITION
  build_cache:
    folder: build
    fingerprint_script: echo $CIRRUS_BUILD_ID
  setup_script:
    - (cd build && npm pack)
    - cp build/sonar-scan-SNAPSHOT.tgz test/integration
    - (cd test/integration && npm install --no-save sonar-scan-SNAPSHOT.tgz)
    - (cd tools/orchestrator && npm run build)
  test_script:
    - npm run test-integration

build_task:
  eks_container:
    <<: *CONTAINER_DEFINITION
    cpu: 4
    memory: 8G
  #  env:
  #    SONAR_TOKEN: ENCRYPTED[6aa9305c4d78b8f753d86e26171ff2c6f40600c03d514cf2bff683d14d466078169f17a408af03ad2ee85de8458157b6]
  build_cache:
    folder: build
    fingerprint_script: echo $CIRRUS_BUILD_ID
    populate_script:
      - npm config set //repox.jfrog.io/artifactory/api/npm/:_authToken=${ARTIFACTORY_ACCESS_TOKEN}
      - npm ci
      - VERSION=$BRANCH_SLUG npm run build
  test_script:
    - npm run test
  sonarcloud_analysis_script:
    - node ./scripts/ci-analysis.js

publish_task:
  depends_on:
    - build
  eks_container:
    <<: *CONTAINER_DEFINITION
    cpu: 2
    memory: 2G
  only_if: $CIRRUS_USER_COLLABORATOR == 'true' && $CIRRUS_PR == ""
  build_cache:
    folder: build
    fingerprint_script: echo $CIRRUS_BUILD_ID
  publish_script:
    - jfrog c add repox --url https://repox.jfrog.io/ --access-token $ARTIFACTORY_DEPLOY_ACCESS_TOKEN
    - jfrog c use repox
    - jfrog npm-config --repo-resolve npm --repo-deploy $ARTIFACTORY_DEPLOY_REPOSITORY
    - cd build
    - jfrog npm publish --build-name=$BUILD_NAME --build-number=$CIRRUS_CHANGE_IN_REPO
    - jfrog rt build-add-git $BUILD_NAME $CIRRUS_CHANGE_IN_REPO
    - jfrog rt build-publish $BUILD_NAME $CIRRUS_CHANGE_IN_REPO

mend_task:
  depends_on:
    - build
  eks_container:
    <<: *CONTAINER_DEFINITION
    cpu: 2
    memory: 2G
  only_if: $CIRRUS_USER_COLLABORATOR == 'true'
  env:
    #    TODO replace secret with vault
    WS_APIKEY: ENCRYPTED[!3929c6148b9dfc751a2d17c590b15d755f82cd9c108f2de5f24a5b32f2a0c26144e921fab7e2c959fc2824d6d6d1550d!]
  run_script:
    - export VERSION=$(git rev-parse HEAD)
    - export WS_PROJECTNAME="${CIRRUS_REPO_FULL_NAME}"
    - export BUILD_NUMBER=${VERSION}
    - source ws_scan.sh
  allow_failures: 'true'
  always:
    mend_artifacts:
      path: 'whitesource/**/*'

qa_task:
  depends_on:
    - build
  <<: *ONLY_SONARSOURCE_QA
  eks_container:
    <<: *CONTAINER_DEFINITION
    cpu: 4
    memory: 8G
  <<: *QA_SCRIPT_DEFINITION

qa_win_task:
  depends_on:
    - build
  <<: *ONLY_SONARSOURCE_QA
  <<: *INSTANCE_DEFINITION
  <<: *QA_SCRIPT_DEFINITION
