on:
  release:
    types:
      - published

jobs:
  publish:
    permissions:
      contents: read
      id-token: write # required for SonarSource/vault-action-wrapper
    runs-on: ubuntu-latest
    env:
      RELEASE_TAG: ${{ github.event.release.tag_name }}
      RELEASE_NAME: ${{ github.event.release.name }}
      REPOX_URL: 'https://repox.jfrog.io/artifactory'
      # todo: remove the next 3 lines?
      NPM_REPOSITORY: 'sonarsource-npm-public'
      SCOPE: '@sonar'
      PACKAGE: 'scan'
    steps:
      - name: Fetch the secrets
        id: secrets
        uses: SonarSource/vault-action-wrapper@v3
        with:
          secrets:
            development/artifactory/token/SonarSource-sonar-scanner-npm-promoter access_token  | promoter_access_token;
            development/kv/data/npmjs sonartech_npm_token  | npm_token;
            development/kv/data/repox artifactory_url  | repox_url;

      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Setup the registries
        run: |
          npm config set //registry.npmjs.org/:_authToken=${{ fromJSON(steps.secrets.outputs.vault).npm_token }}
          npm config set //repox.jfrog.io/artifactory/api/npm/:_authToken=${{ fromJSON(steps.secrets.outputs.vault).promoter_access_token }}

      - name: Build the package
        run: |
          npm ci
          VERSION=${RELEASE_TAG} npm run build

      - name: Setup JFrog for deploy
        uses: SonarSource/jfrog-setup-wrapper@907e87c3d2081a98d2ab8cb03284ee6711f1ee83 # tag=3.2.3
        with:
          jfrogAccessToken: ${{ fromJSON(steps.secrets.outputs.vault).promoter_access_token }}

      - name: Publish the package to Artifactory
        run: |
          cd build
          jfrog config add repox --url https://repox.jfrog.io/ --access-token ${{ fromJSON(steps.secrets.outputs.vault).promoter_access_token }}
          jfrog config use repox
          jfrog npm-config --repo-resolve npm --repo-deploy sonarsource-npm-public-releases
          jfrog npm publish
          jfrog rt build-add-git
          jfrog rt build-publish sonar-scanner-npm $RELEASE_TAG
          jfrog rt build-promote --status released sonar-scanner-npm $RELEASE_TAG sonarsource-npm-public-releases

      - name: Promote npm package
        env:
          REPOX_URL: ${{ fromJSON(steps.secrets.outputs.vault).repox_url }}
          PROMOTE_ACCESS_TOKEN: ${{ fromJSON(steps.secrets.outputs.vault).promoter_access_token }}
          CI: true
        run: |
          jfrog config add repox --artifactory-url $REPOX_URL --access-token $PROMOTE_ACCESS_TOKEN
          jfrog config use repox

      - name: Publish the package to npm
        run: |
          cd build
          npm publish --dry-run
          echo $(jq '.name = "sonarqube-scanner"' package.json) > package.json
          npm publish --dry-run
