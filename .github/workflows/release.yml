on:
  release:
    types:
      - published

jobs:
  publish:
    permissions:
      contents: read
      id-token: write # required for SonarSource/vault-action-wrapper
    runs-on: ubuntu-latest
    env:
      RELEASE_TAG: ${{ github.event.release.tag_name }}
      REPOX_URL: 'https://repox.jfrog.io/artifactory'
      ARTIFACTORY_DEPLOY_REPO: sonarsource-npm-public-qa
      NPM_REPOSITORY: 'sonarsource-npm-public'
      SCOPE: ''
      PACKAGE: 'sonarqube-scanner'
    steps:
      - name: Vault
        id: secrets
        uses: SonarSource/vault-action-wrapper@v3
        with:
          secrets:
            development/artifactory/token/SonarSource-sonar-scanner-npm-qa-deployer access_token  | qa_deployer_access_token;
            development/artifactory/token/SonarSource-sonar-scanner-npm-promoter access_token  | promoter_access_token;
            development/kv/data/npmjs sonartech_npm_token  | npm_token;
            development/kv/data/repox url  | repox_url;
      - name: Setup JFrog for deploy
        uses: SonarSource/jfrog-setup-wrapper@907e87c # tag=3.2.3
        with:
          jfrogAccessToken: ${{ fromJSON(steps.secrets.outputs.vault).qa_deployer_access_token }}
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: mv .github/workflows/.npmrc .npmrc
      - name: Publish npm package
        env:
          NPM_TOKEN: ${{ fromJSON(steps.secrets.outputs.vault).npm_token }}
        run: |
          jfrog rt npm-config --repo-resolve npm --repo-deploy $ARTIFACTORY_DEPLOY_REPO
          jfrog rt npm-ci
          npm publish
          jfrog rt npm-publish --build-name=$PACKAGE --build-number=${{ github.event.release.tag_name }}
          jfrog rt build-publish $PACKAGE ${{ github.event.release.tag_name }}
      - name: Promote npm package
        env:
          REPOX_URL: ${{ fromJSON(steps.secrets.outputs.vault).repox_url }}
          PROMOTE_ACCESS_TOKEN: ${{ fromJSON(steps.secrets.outputs.vault).promoter_access_token }}
          CI: true
        run: |
          jfrog config add repox --artifactory-url $REPOX_URL --access-token $PROMOTE_ACCESS_TOKEN
          jfrog config use repox
          jfrog rt bpr --status it-passed $PACKAGE $RELEASE_TAG sonarsource-npm-public-builds 
          jfrog rt bpr --status released $PACKAGE $RELEASE_TAG sonarsource-npm-public-releases
